/*!
 * type 0.4.0 (https://github.com/jsmini/type)
 * API https://github.com/jsmini/type/blob/master/doc/api.md
 * Copyright 2017-2018 jsmini. All Rights Reserved
 * Licensed under MIT (https://github.com/jsmini/type/blob/master/LICENSE)
 */

(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
	typeof define === 'function' && define.amd ? define(['exports'], factory) :
	(factory((global.jsmini_type = {})));
}(this, (function (exports) { 'use strict';

const toString = Object.prototype.toString;

function type(x) {
    if(x === null){
        return 'null';
    }

    const t= typeof x;

    if(t !== 'object'){
        return t;
    }

    let c;
    try {
        c = toString.call(x).slice(8, -1).toLowerCase();
    } catch(exp) {
        return 'object';
    }

    if(c !== 'object'){
        return c;
    }

    if(x.constructor == Object){
        return c;
    }

    return 'unknown';
}

exports.type = type;

})));
